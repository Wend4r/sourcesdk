if(NOT PROTOBUF_DIR)
	message(FATAL_ERROR "PROTOBUF_DIR is empty")
endif()

if(NOT SOURCESDK_DIR)
	message(FATAL_ERROR "SOURCESDK_DIR is empty")
endif()

set(SOURCESDK_PROTO_FILENAMES)
set(SOURCESDK_CUSTOM_PROTO_FILENAMES)

option(SOURCESDK_CUSTOM_PROTOS "Optional list of custom .proto files to generate; if set, overrides the default proto sources" OFF)
option(SOURCESDK_CUSTOM_PROTO_DIR "If set, the directory for custom proto files" OFF)
option(SOURCESDK_CUSTOM_PROTO_OUTPUT_DIR "If set, the output directory for generated custom proto files" OFF)
option(SOURCESDK_CUSTOM_SKIP_PROTOS "Optional list of .proto filenames to skip during generation; matched against basename (e.g. project_voice.proto)" OFF)

set(SOURCESDK_PROTO_DIR "${SOURCESDK_COMMON_DIR}")
set(SOURCESDK_PROTO_OUTPUT_DIR "${CMAKE_CURRENT_BINARY_DIR}/protos")
set(SOURCESDK_PROTOC_EXE "protoc${CMAKE_EXECUTABLE_SUFFIX}")

set(SOURCESDK_SKIP_PROTOS
	# steammessages_base # steammessages instead
	base_gcmessages_csgo # base_gcmessages instead
)

foreach(PROTO_DIR ${SOURCESDK_PROTO_DIRS})
	if(EXISTS ${PROTO_DIR})
		file(GLOB PROTO_FILENAMES "${PROTO_DIR}/*.proto")
		list(APPEND SOURCESDK_PROTO_FILENAMES ${PROTO_FILENAMES})
	else()
		message(WARNING "Proto's directory \"${PROTO_DIR}\" is not exists")
	endif()
endforeach()

if(SOURCESDK_CUSTOM_PROTO_DIR)
	if(EXISTS ${SOURCESDK_CUSTOM_PROTO_DIR})
		file(GLOB CUSTOM_PROTO_FILENAMES "${SOURCESDK_CUSTOM_PROTO_DIR}/*.proto")
		list(APPEND SOURCESDK_CUSTOM_PROTO_FILENAMES ${CUSTOM_PROTO_FILENAMES})
	else()
		message(WARNING "Custom proto's directory \"${SOURCESDK_CUSTOM_PROTO_DIR}\" is not exists")
	endif()
endif()

if(NOT SOURCESDK_COMPILE_PROTOBUF)
	if(NOT SOURCESDK_PROTOS)
		set(SOURCESDK_PROTOS
			${SOURCESDK_NEEDED_PROTOS}
		)
	endif()

	set(SOURCESDK_CUSTOM_PROTOS
		${SOURCESDK_CUSTOM_PROTOS}
	)
endif()

if(SOURCESDK_PROTOS)
	foreach(PROTO ${SOURCESDK_PROTOS})

		if(PROTO IN_LIST SOURCESDK_SKIP_PROTOS)
			message(WARNING "Ignore skipped ${PROTO} proto")
		endif()
	endforeach()
else()
	foreach(PROTO_FILENAME ${SOURCESDK_PROTO_FILENAMES})
		get_filename_component(PROTO "${PROTO_FILENAME}" NAME_WLE)

		if(NOT PROTO IN_LIST SOURCESDK_SKIP_PROTOS)
			list(APPEND SOURCESDK_PROTOS "${PROTO}")
		endif()
	endforeach()
endif()

if(NOT SOURCESDK_CUSTOM_PROTOS)
	foreach(PROTO_FILENAME ${SOURCESDK_CUSTOM_PROTO_FILENAMES})
		get_filename_component(PROTO "${PROTO_FILENAME}" NAME_WLE)

		if(NOT PROTO IN_LIST SOURCESDK_CUSTOM_SKIP_PROTOS)
			list(APPEND SOURCESDK_CUSTOM_PROTOS "${PROTO}")
		endif()
	endforeach()
endif()

set(SOURCESDK_PROTOC_EXECUTABLE "${DEVTOOLS_BIN_DIR}/${SOURCESDK_PLATFORM_DIR}/${SOURCESDK_PROTOC_EXE}")
set(SOURCESDK_PROTOBUF_SOURCE_DIR "${PROTOBUF_DIR}/src")

set(SOURCESDK_PROTO_SOURCE_FILENAMES
	${SOURCESDK_PROTO_SOURCE_FILENAMES}
)

set(SOURCESDK_CUSTOM_PROTO_SOURCES
	${SOURCESDK_CUSTOM_PROTO_SOURCES}
)

if(SOURCESDK_PROTOS)
	foreach(PROTO_FILE IN LISTS SOURCESDK_PROTOS)
		list(APPEND SOURCESDK_PROTO_SOURCE_FILENAMES "${PROTO_FILE}.proto")
	endforeach()
endif()

if(SOURCESDK_CUSTOM_PROTOS)
	foreach(PROTO_FILE IN LISTS SOURCESDK_CUSTOM_PROTOS)
		list(APPEND SOURCESDK_CUSTOM_PROTO_SOURCE_FILENAMES "${PROTO_FILE}.proto")
	endforeach()
endif()

if(SOURCESDK_COMPILE_PROTOBUF)
	set(SOURCESDK_PROTO_SOURCES
		${SOURCESDK_PROTO_SOURCES}
	)

	set(SOURCESDK_CUSTOM_PROTO_SOURCES
		${SOURCESDK_CUSTOM_PROTO_SOURCES}
	)

	if(SOURCESDK_PROTOS)
		foreach(PROTO_FILE IN LISTS SOURCESDK_PROTOS)
			list(APPEND SOURCESDK_PROTO_SOURCES "${SOURCESDK_PROTO_OUTPUT_DIR}/${PROTO_FILE}.pb.cc")
		endforeach()
	endif()

	if(SOURCESDK_CUSTOM_PROTOS)
		foreach(PROTO_FILE IN LISTS SOURCESDK_CUSTOM_PROTOS)
			list(APPEND SOURCESDK_CUSTOM_PROTO_SOURCES "${SOURCESDK_CUSTOM_PROTO_OUTPUT_DIR}/${PROTO_FILE}.pb.cc")
		endforeach()
	endif()
endif()

set(SOURCESDK_LOGS_DIRECTORY "logs")
set(SOURCESDK_LOGS_PROTOS_DIRECTORY "${SOURCESDK_LOGS_DIRECTORY}/protos")
string(TIMESTAMP SOURCESDK_PROTO_DATE_FILENAME "%Y_%m_%d-%H_%M_%S")
set(SOURCESDK_LOGS_PROTOS_DATE_DIRECTORY "${SOURCESDK_LOGS_PROTOS_DIRECTORY}/${SOURCESDK_PROTO_DATE_FILENAME}")
set(SOURCESDK_LOGS_PROTOS_DATE_ERRORS_DIRECTORY "${SOURCESDK_LOGS_PROTOS_DIRECTORY}/${SOURCESDK_PROTO_DATE_FILENAME}/errors")
