
if(NOT SOURCESDK_DIR)
	message(FATAL_ERROR "SOURCESDK_DIR is empty")
endif()

set(SOURCESDK_PROTOS_NAME "protos")
set(SOURCESDK_PROTOS_OUTPUT_NAME "${SOURCESDK_PROTOS_NAME}")

set(SOURCESDK_PROTOS_COMPILER_OPTIONS
	${SOURCESDK_COMPILER_OPTIONS}
)

set(SOURCESDK_PROTOS_LINK_OPTIONS
	${SOURCESDK_LINK_OPTIONS}
)

set(SOURCESDK_PROTOS_COMPILE_DEFINITIONS
	${SOURCESDK_COMPILE_DEFINITIONS}
)

set(SOURCESDK_PUBLIC_TIER1_INCLUDE_DIR "${SOURCESDK_PUBLIC_DIR}/tier1")

set(SOURCESDK_PROTOS_INCLUDE_DIRS
	${SOURCESDK_PROTOBUF_SOURCE_DIR}
	${SOURCESDK_PROTO_OUTPUT_DIR}
)

if(SOURCESDK_CUSTOM_PROTO_OUTPUT_DIR)
	list(APPEND SOURCESDK_PROTOS_INCLUDE_DIRS "${SOURCESDK_CUSTOM_PROTO_OUTPUT_DIR}")
endif()

list(APPEND SOURCESDK_INCLUDE_DIRS
	${SOURCESDK_PROTOS_INCLUDE_DIRS}
)

set(SOURCESDK_PROTOS_SOURCE_FILES
	${SOURCESDK_PROTO_SOURCES}
)

if(SOURCESDK_CUSTOM_PROTO_SOURCES)
	list(APPEND SOURCESDK_PROTOS_SOURCE_FILES "${SOURCESDK_CUSTOM_PROTO_SOURCES}")
endif()

add_library(${SOURCESDK_PROTOS_NAME} STATIC ${SOURCESDK_PROTOS_SOURCE_FILES})
add_library(${PROJECT_NAME}::${SOURCESDK_PROTOS_NAME} ALIAS ${SOURCESDK_PROTOS_NAME})

set_target_properties(${SOURCESDK_PROTOS_NAME} PROPERTIES
	C_STANDARD 17
	C_STANDARD_REQUIRED ON
	C_EXTENSIONS OFF

	CXX_STANDARD 17
	CXX_STANDARD_REQUIRED ON
	CXX_EXTENSIONS OFF
)

set_target_properties(${SOURCESDK_PROTOS_NAME} PROPERTIES OUTPUT_NAME ${SOURCESDK_PROTOS_OUTPUT_NAME})

if(WINDOWS)
	if(SOURCESDK_MSVC_RUNTIME_LIBRARY)
		set_target_properties(${SOURCESDK_PROTOS_NAME} PROPERTIES MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
	endif()
elseif(MACOS)
	set_target_properties(${SOURCESDK_PROTOS_NAME} PROPERTIES OSX_ARCHITECTURES "x86_64")
endif()

target_compile_options(${SOURCESDK_PROTOS_NAME} PRIVATE ${PLATFORM_COMPILE_OPTIONS} ${SOURCESDK_PROTOS_COMPILER_OPTIONS})
target_link_options(${SOURCESDK_PROTOS_NAME} PRIVATE ${PLATFORM_LINK_OPTIONS} ${SOURCESDK_PROTOS_LINK_OPTIONS})

target_compile_definitions(${SOURCESDK_PROTOS_NAME} PRIVATE ${PLATFORM_COMPILE_DEFINITIONS} ${SOURCESDK_PROTOS_COMPILE_DEFINITIONS})
target_include_directories(${SOURCESDK_PROTOS_NAME} PRIVATE ${PLATFORM_INCLUDE_DIRS} ${SOURCESDK_PROTOS_INCLUDE_DIRS})
target_link_libraries(${SOURCESDK_PROTOS_NAME} PUBLIC ${SOURCESDK_TIER0_NAME})
